CREATE TABLE GAME_USER_ID(
	USER_NUM NUMBER,
	CONSTRAINT USER_PK PRIMARY KEY(USER_NUM),
	USER_ID VARCHAR2(32),
	USER_PW VARCHAR2(32),
	USER_ACCESS CHAR(1) DEFAULT 'Y' NOT NULL CONSTRAINT BAN_VHAR CHECK(USER_ACCESS IN('Y', 'N')),
	USER_JOIN DATE,
	USER_LAST_JOIN DATE,
	USER_EXP NUMBER
);

ALTER TABLE GAME_USER_ID MODIFY (USER_JOIN DEFAULT SYSDATE);
ALTER TABLE GAME_USER_ID MODIFY (USER_LAST_JOIN DEFAULT SYSDATE);
ALTER TABLE GAME_USER_ID MODIFY (USER_EXP DEFAULT 0);

--ALTER TABLE GAME_USER_ID ADD CONSTRAINT USER_ID_UQ ADD UNIQUE INDEX(USER_ID);


CREATE TABLE GAME_CLASS(
	CLASS_NAME VARCHAR2(32),
	CONSTRAINT CLASS_PK PRIMARY KEY(CLASS_NAME),
	BASIC_HEALTH NUMBER,
	BONUS_HEALTH NUMBER,
	BASIC_ARMMOR NUMBER,
	BONUS_ARMMOR NUMBER,
	BASIC_ATTACK NUMBER,
	BONUS_ATTACK NUMBER,
	BASIC_MOVE_SPEED NUMBER,
	BONUS_MOVE_SPEED NUMBER,
	BASIC_ATTACK_SPEED NUMBER,
	BONUS_ATTACK_SPEED NUMBER
);

--CREATE TABLE GAME_POINT_NAME(
--	USER_TITLE VARCHAR2(32),
--	CONSTRAINT POINT_PK PRIMARY KEY(USER_TITLE),
--	TITLE_NEED_POINT NUMBER
--);
--
--CREATE TABLE GAME_USER_LEVEL(
--	USER_LEVEL NUMBER,
--	CONSTRAINT USER_LEVEL_PK PRIMARY KEY(USER_LEVEL),
--	LEVEL_NEED_EXP NUMBER
--);
--
--CREATE TABLE GAME_CHAR_LEVEL(
--	CHAR_LEVEL NUMBER,
--	CONSTRAINT CHAR_LEVEL_PK PRIMARY KEY(CHAR_LEVEL),
--	LEVEL_NEED_EXP NUMBER
--);


CREATE TABLE GAME_EQUIPMENT(
	EQUIP_NUM NUMBER,
	CONSTRAINT EQUIP_PK PRIMARY KEY(EQUIP_NUM),
	EQUIP_NAME VARCHAR2(32),
	EQUIP_PART VARCHAR2(32),
	EQUIP_LEVEL NUMBER,
	EQUIP_RATING VARCHAR2(32),
	USING_CLASS VARCHAR2(32),
	--CONSTRAINT EQUIP_CLASS_FK FOREIGN KEY(USING_CLASS) REFERENCES GAME_CLASS(CLASS_NAME),
	PLUS_HEALTH NUMBER,
	PLUS_ARMMOR NUMBER,
	PLUS_ATTACK NUMBER,
	PLUS_MOVE_SPEED NUMBER,
	PLUS_ATTACK_SPEED NUMBER
);
--ALTER TABLE GAME_EQUIPMENT DROP CONSTRAINT EQUIP_CLASS_FK;
ALTER TABLE GAME_EQUIPMENT ADD CONSTRAINT CHECK_EQUIP_PART CHECK (EQUIP_PART IN ('W', 'R', 'B', 'G'));
--ALTER TABLE GAME_EQUIPMENT DROP CONSTRAINT EQUIP_CLASS_FK;

CREATE TABLE GAME_USER_CHAR(
	CHAR_NUM NUMBER,
	CONSTRAINT CHAR_PK PRIMARY KEY(CHAR_NUM),
	USER_NUM NUMBER,
	CONSTRAINT CHAR_USER_FK FOREIGN KEY(USER_NUM) REFERENCES GAME_USER_ID(USER_NUM),
	CHAR_NICKNAME VARCHAR2(32),
	CHAR_EXP NUMBER,
	CLASS_NAME VARCHAR2(32),
	CONSTRAINT CHAR_CLASS_FK FOREIGN KEY(CLASS_NAME) REFERENCES GAME_CLASS(CLASS_NAME),
	CHAR_POINT NUMBER,
	CHAR_WIN NUMBER,
	CHAR_LOSE NUMBER,
	CHAR_DRAW NUMBER,
	CHAR_WEAPON NUMBER,
	CONSTRAINT CHAR_WEAPON_FK FOREIGN KEY(CHAR_WEAPON) REFERENCES GAME_EQUIPMENT(EQUIP_NUM),
	CHAR_RED NUMBER,
	CONSTRAINT CHAR_RED_FK FOREIGN KEY(CHAR_RED) REFERENCES GAME_EQUIPMENT(EQUIP_NUM),
	CHAR_BLUE NUMBER,
	CONSTRAINT CHAR_BLUE_FK FOREIGN KEY(CHAR_BLUE) REFERENCES GAME_EQUIPMENT(EQUIP_NUM),
	CHAR_GREEN NUMBER,
	CONSTRAINT CHAR_GRENN_FK FOREIGN KEY(CHAR_GREEN) REFERENCES GAME_EQUIPMENT(EQUIP_NUM)
);
ALTER TABLE GAME_USER_CHAR MODIFY (CHAR_POINT DEFAULT 1000);
ALTER TABLE GAME_USER_CHAR MODIFY (CHAR_WIN DEFAULT 0);
ALTER TABLE GAME_USER_CHAR MODIFY (CHAR_LOSE DEFAULT 0);
ALTER TABLE GAME_USER_CHAR MODIFY (CHAR_DRAW DEFAULT 0);
ALTER TABLE GAME_USER_CHAR MODIFY (CHAR_EXP DEFAULT 0);
ALTER TABLE GAME_USER_CHAR ADD CONSTRAINT NICKNAME_UQ UNIQUE(CHAR_NICKNAME);

CREATE TABLE GAME_FIGHT_LOG(
	FIGHT_NUM NUMBER,
	CONSTRAINT FIGHT_PK PRIMARY KEY(FIGHT_NUM),
	PLAYER_CHAR_A NUMBER,
	CONSTRAINT FIGHT_A_FK FOREIGN KEY(PLAYER_CHAR_A) REFERENCES GAME_USER_CHAR(CHAR_NUM),
	PLAYER_CHAR_B NUMBER,
	CONSTRAINT FIGHT_B_FK FOREIGN KEY(PLAYER_CHAR_B) REFERENCES GAME_USER_CHAR(CHAR_NUM),
	WINNER_CHAR NUMBER,
	CONSTRAINT FIGHT_W_FK FOREIGN KEY(WINNER_CHAR) REFERENCES GAME_USER_CHAR(CHAR_NUM),
	PLAY_DATE DATE,
	PLAY_TIME NUMBER,
	PLAY_LOG VARCHAR2(100)
);
ALTER TABLE GAME_FIGHT_LOG MODIFY (PLAY_DATE DEFAULT SYSDATE);

CREATE SEQUENCE USER_SEQ
INCREMENT BY 1
START WITH 1
MINVALUE 1;
DROP SEQUENCE USER_SEQ;

CREATE SEQUENCE CHAR_SEQ
INCREMENT BY 1
START WITH 1
MINVALUE 1;
DROP SEQUENCE CHAR_SEQ;

CREATE SEQUENCE EQUIP_SEQ
INCREMENT BY 1
START WITH 1
MINVALUE 1;
DROP SEQUENCE EQUIP_SEQ;

CREATE SEQUENCE FIGHT_SEQ
INCREMENT BY 1
START WITH 1
MINVALUE 1;
DROP SEQUENCE FIGHT_SEQ;
--ÇÔ¼ö

CREATE OR REPLACE FUNCTION CHECK_POINT(
	POINT NUMBER
) RETURN VARCHAR2
IS
	NAME VARCHAR2(32) := 'A';
BEGIN
	IF POINT < 250 THEN NAME := 'Iron';
	ELSIF POINT < 750 THEN NAME := 'Bronze';
	ELSIF POINT < 1250 THEN NAME := 'Silver';
	ELSIF POINT < 1750 THEN NAME := 'Platinum';
	ELSE NAME := 'Diamond';
	END IF;
	RETURN NAME;
END;




CREATE OR REPLACE FUNCTION CHECK_USER_LEVEL (
	POINT NUMBER
) RETURN NUMBER
IS
	LV NUMBER := 0;
BEGIN
	LV := POINT / 100;
	IF LV > 100 THEN LV := 100;
	END IF;
	RETURN LV;
END;

CREATE OR REPLACE FUNCTION CHECK_CHAR_LEVEL (
	POINT NUMBER
) RETURN NUMBER
IS
	LV NUMBER := 0;
BEGIN
	LV := POINT / 100;
	IF LV > 30 THEN LV := 30;
	END IF;
	RETURN LV;
END;








-------------------------

SELECT * FROM GAME_USER_ID;
SELECT * FROM GAME_CLASS;
--SELECT * FROM GAME_POINT_NAME;
--SELECT * FROM GAME_USER_LEVEL;
--SELECT * FROM GAME_CHAR_LEVEL;
SELECT * FROM GAME_EQUIPMENT;
SELECT * FROM GAME_USER_CHAR;
SELECT * FROM GAME_FIGHT_LOG;


--Á¡¼ö·©Å·

SELECT CH.CHAR_NICKNAME "´Ð³×ÀÓ", CH.CHAR_POINT "Á¡¼ö"
FROM GAME_USER_CHAR CH
ORDER BY CH.CHAR_POINT;


--½Â·ü·©Å·
SELECT CH.CHAR_NICKNAME, (CH.CHAR_WIN + CH.CHAR_LOSE + CH.CHAR_DRAW) * 100 "½Â·ü"
FROM GAME_USER_CHAR CH
ORDER BY ((CH.CHAR_WIN + CH.CHAR_LOSE + CH.CHAR_DRAW) * 100);

--ÃÖ°í½Â·ü CLASS
SELECT CLASS_NAME, MAX((CH.CHAR_WIN + CH.CHAR_LOSE + CH.CHAR_DRAW) * 100) "ÃÖ°í½Â·ü"
FROM GAME_USER_CHAR CH
GROUP BY CLASS_NAME;

--ÃÖ´Ù½Â¸® CLASS
SELECT CLASS_NAME, MAX(CH.CHAR_WIN)
FROM GAME_USER_CHAR CH
GROUP BY CLASS_NAME;


--Ä³¸¯ÅÍÁ¤º¸
CREATE VIEW GAME_CHAR_VIEW
AS(
	SELECT CH.CHAR_NICKNAME, HR.CHECK_CHAR_LEVEL(CH.CHAR_EXP) "LV", CH.CLASS_NAME, HR.CHECK_POINT(CH.CHAR_POINT) "Æ¼¾î", CH.CHAR_WIN, 
	CH.CHAR_WIN / (CH.CHAR_WIN + CH.CHAR_LOSE + CH.CHAR_DRAW + 1) * 100 "½Â·ü",
	NVL(CL.BASIC_HEALTH, 0) + NVL(CL.BONUS_HEALTH, 0) * HR.CHECK_CHAR_LEVEL(CH.CHAR_EXP) + NVL(EQW.PLUS_HEALTH, 0) + NVL(EQR.PLUS_HEALTH, 0) + NVL(EQB.PLUS_HEALTH, 0) + NVL(EQG.PLUS_HEALTH, 0) "Ã¼·Â",
	NVL(CL.BASIC_ARMMOR, 0) + NVL(CL.BONUS_ARMMOR, 0) * HR.CHECK_CHAR_LEVEL(CH.CHAR_EXP) + NVL(EQW.PLUS_ARMMOR, 0) + NVL(EQR.PLUS_ARMMOR, 0) + NVL(EQB.PLUS_ARMMOR, 0) + NVL(EQG.PLUS_ARMMOR, 0) "¹æ¾î",
	NVL(CL.BASIC_ATTACK, 0) + NVL(CL.BONUS_ATTACK, 0) * HR.CHECK_CHAR_LEVEL(CH.CHAR_EXP) + NVL(EQW.PLUS_ATTACK, 0) + NVL(EQR.PLUS_ATTACK, 0) + NVL(EQB.PLUS_ATTACK, 0) + NVL(EQG.PLUS_ATTACK, 0) "°ø°Ý",
	NVL(CL.BASIC_MOVE_SPEED, 0) + NVL(CL.BONUS_MOVE_SPEED, 0) * HR.CHECK_CHAR_LEVEL(CH.CHAR_EXP) + NVL(EQW.PLUS_MOVE_SPEED, 0) + NVL(EQR.PLUS_MOVE_SPEED, 0) + NVL(EQB.PLUS_MOVE_SPEED, 0) + NVL(EQG.PLUS_MOVE_SPEED, 0) "ÀÌµ¿¼Óµµ",
	NVL(CL.BASIC_ATTACK_SPEED, 0) + NVL(CL.BONUS_ATTACK_SPEED, 0) * HR.CHECK_CHAR_LEVEL(CH.CHAR_EXP) + NVL(EQW.PLUS_ATTACK_SPEED, 0) + NVL(EQR.PLUS_ATTACK_SPEED, 0) + NVL(EQB.PLUS_ATTACK_SPEED, 0) + NVL(EQG.PLUS_ATTACK_SPEED, 0) "°ø°Ý¼Óµµ",
	EQW.EQUIP_NAME "¹«±â", EQR.EQUIP_NAME "RED", EQB.EQUIP_NAME "BLUE", EQG.EQUIP_NAME "GREEN"
	FROM GAME_USER_CHAR CH
	LEFT JOIN GAME_CLASS CL ON CH.CLASS_NAME = CL.CLASS_NAME
	LEFT JOIN GAME_EQUIPMENT EQW ON CH.CHAR_WEAPON = EQW.EQUIP_NUM
	LEFT JOIN GAME_EQUIPMENT EQR ON CH.CHAR_RED = EQR.EQUIP_NUM
	LEFT JOIN GAME_EQUIPMENT EQB ON CH.CHAR_BLUE = EQB.EQUIP_NUM
	LEFT JOIN GAME_EQUIPMENT EQG ON CH.CHAR_GREEN = EQG.EQUIP_NUM
);
DROP VIEW GAME_CHAR_VIEW;
SELECT * FROM GAME_CHAR_VIEW;


--À¯Àúº¸À¯Ä³¸¯ÅÍ
CREATE VIEW GAME_ID_VIEW
AS(
	SELECT I.USER_ID, HR.CHECK_USER_LEVEL(I.USER_EXP) "À¯ÀúLV", CH.CHAR_NUM, CH.CHAR_NICKNAME, CH.CLASS_NAME, HR.CHECK_CHAR_LEVEL(CH.CHAR_EXP) "LV"
	FROM GAME_USER_ID I
	JOIN GAME_USER_CHAR CH ON I.USER_NUM = CH.USER_NUM
);
SELECT * FROM GAME_ID_VIEW;
DROP VIEW GAME_ID_VIEW;




